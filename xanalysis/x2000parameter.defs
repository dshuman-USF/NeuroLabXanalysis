c Copyright 2005-2020 Kendall F. Morris

c This file is part of the Xanalysis software suite.

c     The Xanalysis software suite is free software: you can redistribute
c     it and/or modify it under the terms of the GNU General Public
c     License as published by the Free Software Foundation, either
c     version 3 of the License, or (at your option) any later version.

c     The suite is distributed in the hope that it will be useful,
c     but WITHOUT ANY WARRANTY; without even the implied warranty of
c     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
c     GNU General Public License for more details.

c     You should have received a copy of the GNU General Public License
c     along with the suite.  If not, see <https://www.gnu.org/licenses/>.

*       filename: x2000parameter.defs
*
*       date of last revision: 07-May-2004      lss
*
*       This file contains the header block for x2000_v2.  PARAMETERs are
*       defined here - this eases the task of changing numerical values since
*       the values can be adjusted within the header block only, not
*       within each program unit that requires those values for array
*       definition, etc.
*
*       (NOTE: arrays are dimensioned in x2000array.defs)
*
*       The following line must be inserted into each program unit that
*       requires this header information:
*
*               $INCLUDE 'x2000parameter.defs'
*
*       The following line must be present in the makefile:
*
*               $(OBJECTS): x2000parameter.defs
*
*       !!!!! WARNING !!!!!  Changing these parameters will change the
*               program version.  FILES GENERATED BY ONE VERSION MAY
*               NOT BE READ CORRECTLY BY ANOTHER VERSION!
*
*       ********************************************************************
*       ********************************************************************
*
*
c$WARNINGS OFF

      INTEGER QDT_RECL,DBG_RECL

c If you change MAX_NUM_CHAN from 200, you will change the format of the
c .db.sav and .qdt.sav files, making them incompatible with the current
c (Feb 2014) version of xanalysis.
      PARAMETER (MAX_NUM_CHAN=200,
     +     MAX_NUM_CODES=999,
     +     MAX_NUM_PAIRS=19900,
     +     MAX_PERT=20,MAX_STA=10,MAX_AA=10,
     +     MAX_PERTURB=50,PS_ANNOTATION_TEXT=3,
     +     PS_VDC_TEXT=0,MAX_NUM_QDTS=5,
     +     iTOTAL_SHIFTS=20,
     +     QDT_RECL=1082,DBG_RECL=1000,iDBP_RECL=300,
     +     MAX_NUM_ACC_CYCLES=20000,
     +     NUM_BINS=101,IHALF=50,IHALFplus1=51,
     +     MAX_NUM_ARRAYS=50)

c$WARNINGS ON
*
*
*
*
*       ********************************************************************
*       ********************************************************************
*
*       add more stuff here:

C     boolean values
c      integer*4 FALSE, TRUE
c      parameter(FALSE=0)
c      parameter(TRUE=1)

C     kinds of graphics devices
c      integer*4 OUTDEV, INDEV, OUTINDEV, OUTMETA, INMETA
      integer*4 OUTDEV, INDEV, OUTINDEV
      parameter(OUTDEV=0)
      parameter(INDEV=1)
      parameter(OUTINDEV=2)
c      parameter(OUTMETA=3)
c      parameter(INMETA=4)

C     clear control parameters
c      integer*4 CLEAR_VDC_EXTENT, CLEAR_VIEWPORT, CLEAR_CLIP_RECTANGLE
c      integer*4 CLEAR_DISPLAY_SURFACE, CLEAR_ALL_BANKS, CLEAR_ZBUFFER
      integer*4 CLEAR_DISPLAY_SURFACE, CLEAR_VIEWPORT
c      parameter(CLEAR_VDC_EXTENT=1)
      parameter(CLEAR_VIEWPORT=17)
c      parameter(CLEAR_CLIP_RECTANGLE=33)
      parameter(CLEAR_DISPLAY_SURFACE=65)
c      parameter(CLEAR_ALL_BANKS=128)
c      parameter(CLEAR_ZBUFFER=256)

C     clip control parameters
c      integer*4 CLIP_TO_RECT, CLIP_TO_VDC, CLIP_OFF, CLIP_TO_VIEWPORT
c      parameter(CLIP_TO_RECT=1)
c      parameter(CLIP_TO_VDC=2)
c      parameter(CLIP_OFF=3)
c      parameter(CLIP_TO_VIEWPORT=4)

C     gopen open_mode parameter masks
c      integer*4 SPOOLED, INIT, THREE_D, RESET_DEVICE, MODEL_XFORM
      integer*4 INIT
c      integer*4 INT_XFORM, FLOAT_XFORM, INT_XFORM32
c      integer*4 ACCELERATED, UNACCELERATED
c      parameter(SPOOLED=1)
C     if this bit is on, output is spooled
      parameter(INIT=2)
C     if this bit is on, device initialization occurs
c      parameter(THREE_D=4)
C     if this bit is on, all transformations are 3D
c      parameter(RESET_DEVICE=8)
C     if this bit is on, do a device reset operation
c      parameter(MODEL_XFORM=16)
C     if this bit is on, matrix stack is in modelling mode
c      parameter(INT_XFORM=32)
C     if this bit is on, operate in "fast" integer mode for certain devices 
C     (eg ELK on Snakes). NOTE: 1) Integer gopen with INT_XFORM results in 
C     much increased performance for devices that take advantage of PA-89 
C     assembly (eg ELK on Snakes). There will be slightly less precision 
C     compared to gopen with INT_XFORM32 mode.  For devices that do not take
C     advantage of  Snakes PA-89 assembly, gopen'ing with INT_XFORM is the 
C     same as gopen'ing with INTXFORM_32.
c      parameter(INT_XFORM32=544)
C     if these bits are on, operate in integer mode.  NOTE: 1) Integer gopen
C     with INT_XFORM32 results in full 32-bit precision but with reduced 
C     performance compared with INT_XFORM which takes advantage of PA-89
C     assembly for certain devices(eg ELK/Snakes). 2) For devices that do
C     not take advantage of Snakes PA-89 assembly, gopen'ing with INT_XFORM 
C     is the same as gopen'ing with INTXFORM_32.
c      parameter(FLOAT_XFORM=64)
C     if this bit is on, floating point operations are enabled
c      parameter(ACCELERATED=128)
C     if this bit is on, look for the accelerated driver if no driver
C     name is specified
c      parameter(UNACCELERATED=256)
C     if this bit is on, look for the unaccelerated driver if no driver
C     name is specified

C     color map modes set with shade_mode function
c      integer*4 CMAP_NORMAL, CMAP_MONOTONIC, CMAP_FULL
      integer*4 CMAP_NORMAL
      parameter(CMAP_NORMAL=0)
c      parameter(CMAP_MONOTONIC=1)
c      parameter(CMAP_FULL=4)

c      integer*4 DFRONT, SUPPRESS_CLEAR
C     double_buffer mode that is used to draw into same buffer that is displayed
c      parameter(DFRONT=4)
C     double_buffer mode used to not clear buffer when switched
c      parameter(SUPPRESS_CLEAR=8)

C     light source types set with light_source/light_model functions
c      integer*4 DIRECTIONAL, POSITIONAL, ATTEN_LIGHT
c      integer*4 SPOT_LIGHT, CONE_LIGHT
c      parameter(DIRECTIONAL=0)
c      parameter(POSITIONAL=1)
c      parameter(ATTEN_LIGHT=2)
c      parameter(SPOT_LIGHT=4)
c      parameter(CONE_LIGHT=8)

C     vertex orders set with vertex_format
c      integer*4 CLOCKWISE, COUNTER_CLOCKWISE, UNIT_NORMALS
c      parameter(CLOCKWISE=0)
c      parameter(COUNTER_CLOCKWISE=1)
c      parameter(UNIT_NORMALS=512)

C     set p1 p2 units
c      integer*4 FRACTIONAL, METRIC
c      parameter(FRACTIONAL=0)
c      parameter(METRIC=1)

C     mapping modes
c      integer*4 ISOTROPIC,DISTORT
c      parameter(ISOTROPIC=0)
c      parameter(DISTORT=1)

C     Starbase linetypes
      integer*4 SOLID, DOT
c      integer*4 SOLID, DASH, DOT, DASH_DOT, DASH_DOT_DOT, LONG_DASH
c      integer*4 CENTER_DASH, CENTER_DASH_DASH
      parameter(SOLID=0)
c      parameter(DASH=1)
      parameter(DOT=2)
c      parameter(DASH_DOT=3)
c      parameter(DASH_DOT_DOT=4)
c      parameter(LONG_DASH=5)
c      parameter(CENTER_DASH=6)
c      parameter(CENTER_DASH_DASH=7)
      
C     wide line endpoint type specifications
c      integer*4 SQUARE, ROUNDED
c      parameter(SQUARE=0)
c      parameter(ROUNDED=1)

C     depth cue models
c      integer*4 DC_MIN, DC_COLOR
c      parameter(DC_MIN=2)
c     parameter(DC_COLOR=4)

C     distance unit specifications for hatch_spacing, line_width
c      integer*4 VDC_UNITS, WC_UNITS, MC_UNITS, DC_UNITS
c      parameter(VDC_UNITS=0)
c      parameter(WC_UNITS=1)
c      parameter(MC_UNITS=1)
c      parameter(DC_UNITS=2)

C     polygon interior styles
      integer*4 INT_HOLLOW, INT_SOLID
c      integer*4 INT_HOLLOW, INT_SOLID, INT_PATTERN, INT_HATCH
c      integer*4 INT_OUTLINE, INT_POINT, INT_TEXTURE
      parameter(INT_HOLLOW=0)
      parameter(INT_SOLID=1)
c      parameter(INT_PATTERN=2)
c      parameter(INT_HATCH=3)
c      parameter(INT_OUTLINE=4)
c      parameter(INT_POINT=5)
c      parameter(INT_TEXTURE=7)


C     Starbase device-independent texture mapping definitions

C     texture map types
c      integer*4 TM_TYPE_MIPMAP
c      parameter(TM_TYPE_MIPMAP=1)
      
C     texel types
c      integer*4 TM_TEXEL_FLOAT_RGB,TM_TEXEL_FLOAT_RGBA
c      integer*4 TM_TEXEL_FLOAT_ARGB
c      integer*4 TM_TEXEL_BYTE_RGB,TM_TEXEL_BYTE_RGBA
c      integer*4 TM_TEXEL_BYTE_ARGB
c      parameter(TM_TEXEL_FLOAT_RGB=1)
c      parameter(TM_TEXEL_FLOAT_RGBA=2)
c      parameter(TM_TEXEL_FLOAT_ARGB=4)
c      parameter(TM_TEXEL_BYTE_RGB=16)
c      parameter(TM_TEXEL_BYTE_RGBA=32)
c      parameter(TM_TEXEL_BYTE_ARGB=64)  
      
C     domain types
c      integer*4 TM_TYPE_COLOR1D,TM_TYPE_COLOR2D
c      parameter(TM_TYPE_COLOR1D=1)
      parameter(TM_TYPE_COLOR2D=2)
      
C     texture mapping minification and magnification definitions
c      integer*4 TM_SAMPLE_SINGLE_BASE,TM_SAMPLE_LINEAR_BASE
c      integer*4 TM_SAMPLE_SINGLE_IN_MIP,TM_SAMPLE_LINEAR_IN_MIP
c      integer*4 TM_SAMPLE_SINGLE_BTWN_MIP,TM_SAMPLE_LINEAR_BTWN_MIP
c      parameter(TM_SAMPLE_SINGLE_BASE=1)
c      parameter(TM_SAMPLE_LINEAR_BASE=2)
c      parameter(TM_SAMPLE_SINGLE_IN_MIP=4)
c      parameter(TM_SAMPLE_LINEAR_IN_MIP=8)
c      parameter(TM_SAMPLE_SINGLE_BTWN_MIP=16)
c      parameter(TM_SAMPLE_LINEAR_BTWN_MIP=32)
      
C     boundary condition handling
c      integer*4 TM_BOUNDARY_COND_CLAMP,TM_BOUNDARY_COND_WRAP
c      integer*4 TM_BOUNDARY_COND_MIRROR,TM_BOUNDARY_COND_BOUND
c      parameter(TM_BOUNDARY_COND_CLAMP=1)
c      parameter(TM_BOUNDARY_COND_WRAP=2)
c      parameter(TM_BOUNDARY_COND_MIRROR=4)
c      parameter(TM_BOUNDARY_COND_BOUND=8)
      
C     boundary color handling
c      integer*4 TM_BOUNDARY_COLOR_ABS,TM_BOUNDARY_COLOR_CLR
c      parameter(TM_BOUNDARY_COLOR_ABS=1)
c      parameter(TM_BOUNDARY_COLOR_CLR=2)
      
C     texture and primitive composition methods
c      integer*4 TM_COMPOSITE_REPLACE,TM_COMPOSITE_MODULATE
c      integer*4 TM_COMPOSITE_DECAL
c      parameter(TM_COMPOSITE_REPLACE=1)
c      parameter(TM_COMPOSITE_MODULATE=2)
c      parameter(TM_COMPOSITE_DECAL=4)
      
C     lighted texture rendering methods -- used with TM_COMPOSITE_MODULATE
c      integer*4 TM_TEXTURE_PRE_LIGHT,TM_TEXTURE_POST_LIGHT
c      parameter(TM_TEXTURE_PRE_LIGHT=1)
c      parameter(TM_TEXTURE_POST_LIGHT=2)
      
C     texture parameterization methods -- see tm_edit_texture(3G)
c      integer*4 TM_PARAM_EXPLICIT,TM_PARAM_REFLECT_SPHERE_EYE
c      integer*4 TM_PARAM_REFLECT_SPHERE_WORLD,TM_PARAM_LINEAR_EYE
c      parameter(TM_PARAM_EXPLICIT=1)
c      parameter(TM_PARAM_REFLECT_SPHERE_EYE=2)
c      parameter(TM_PARAM_REFLECT_SPHERE_WORLD=4)
c      parameter(TM_PARAM_LINEAR_EYE=8)
      
C     texture projection methods -- see tmc_partial_polygon_with_data3d(3G)
c      integer*4 TM_PROJECT_SPHERE_WC,TM_PROJECT_CYLINDER_WC
c      integer*4 TM_PROJECT_LINEAR_WC
c      parameter(TM_PROJECT_SPHERE_WC=1)
c      parameter(TM_PROJECT_CYLINDER_WC=2)
c      parameter(TM_PROJECT_LINEAR_WC=4)
      
C     texture coordinate sources -- see tmc_partial_polygon_with_data3d(3G)
c      integer*4 TM_COORD_SRC_VCOORD,TM_COORD_SRC_VNORMAL
c      parameter(TM_COORD_SRC_VCOORD=1)
c      parameter(TM_COORD_SRC_VNORMAL=2)
      
C     texture rendering optimization hints
c      integer*4 TM_HINT_NONE,TM_HINT_SPEED,TM_HINT_SPACE
c      parameter(TM_HINT_NONE=-28672)
c      parameter(TM_HINT_SPEED=-28671)
c      parameter(TM_HINT_SPACE=-28670)
      
C     tm_edit_texture(3G) selector flag values
      
c      integer*4 TM_TEXEL_ID,TM_DEPTH_BIAS,TM_MIN_FILTER
c      integer*4 TM_MAG_FILTER,TM_BOUND_COND_T0,TM_BOUND_COND_T1
c      integer*4 TM_BOUND_COND_T2,TM_BOUND_COLOR,TM_COMP_METHOD
c      integer*4 TM_REND_METHOD,TM_PARAM_METHOD,TM_ORIENTATION
c      integer*4 TM_EXPL_TXTR_INDEX,TM_IMPL_LINEAR,TM_IMPL_REFL_MTX
c      parameter(TM_TEXEL_ID=1)
c      parameter(TM_DEPTH_BIAS=2)
c      parameter(TM_MIN_FILTER=4)
c      parameter(TM_MAG_FILTER=8)
c      parameter(TM_BOUND_COND_T0=16)
c      parameter(TM_BOUND_COND_T1=32)
c      parameter(TM_BOUND_COND_T2=64)
c      parameter(TM_BOUND_COLOR=128)
c      parameter(TM_COMP_METHOD=256)
c      parameter(TM_REND_METHOD=512)
c      parameter(TM_PARAM_METHOD=1024)
c      parameter(TM_ORIENTATION=2048)
c      parameter(TM_EXPL_TXTR_INDEX=4096)
c      parameter(TM_IMPL_LINEAR=8192)
c      parameter(TM_IMPL_REFL_MTX=16384)

C   Matrix concatenation types 
c      integer*4 PRE, POST, REPLACE, PUSH
c      parameter(PRE=0)
c      parameter(POST=1)
c      parameter(REPLACE=0)
c      parameter(PUSH=1)

C   Viewing matrix change types
c      integer*4 REPLACE_VW, PRE_CONCAT_VW, POST_CONCAT_VW
c      parameter(REPLACE_VW=0)
c      parameter(PRE_CONCAT_VW=1)
c      parameter(POST_CONCAT_VW=2)

C     character switching modes
c      integer*4 ISO_7BIT, ISO_8BIT, HP_8BIT
c      parameter(ISO_7BIT=0)
c      parameter(ISO_8BIT=1)
c      parameter(HP_8BIT=2)

C     text transformation types
c      integer*4 VDC_TEXT, WORLD_COORDINATE_TEXT
c      integer*4 TOS_TEXT, ANNOTATION_TEXT
      integer*4 VDC_TEXT, ANNOTATION_TEXT
      parameter(VDC_TEXT=0)
c      parameter(WORLD_COORDINATE_TEXT=1)
c      parameter(TOS_TEXT=2)
      parameter(ANNOTATION_TEXT=3)

C     text precision types
c      integer*4 STRING_TEXT, CHARACTER_TEXT, STROKE_TEXT
c      parameter(STRING_TEXT=0)
c      parameter(CHARACTER_TEXT=1)
c      parameter(STROKE_TEXT=2)

C     text alignment enumerated types
c      integer*4 TA_LEFT, TA_CENTER, TA_RIGHT
c      integer*4 TA_CONTINUOUS_HORIZONTAL, TA_NORMAL_HORIZONTAL
c      parameter(TA_LEFT=0)
c      parameter(TA_CENTER=1)
c      parameter(TA_RIGHT=2)
c      parameter(TA_CONTINUOUS_HORIZONTAL=3)
c      parameter(TA_NORMAL_HORIZONTAL=4)
      
c      integer*4 TA_TOP, TA_CAP, TA_HALF, TA_BASE, TA_BOTTOM
c      integer*4 TA_CONTINUOUS_VERTICAL, TA_NORMAL_VERTICAL
c      parameter(TA_TOP=0)
c      parameter(TA_CAP=1)
c      parameter(TA_HALF=2)
c      parameter(TA_BASE=3)
c      parameter(TA_BOTTOM=4)
c      parameter(TA_CONTINUOUS_VERTICAL=5)
c      parameter(TA_NORMAL_VERTICAL=6)

C     character path and line path enumerated types
c      integer*4 PATH_RIGHT, PATH_LEFT, PATH_UP, PATH_DOWN
c      parameter(PATH_RIGHT=0)
c      parameter(PATH_LEFT=1)
c      parameter(PATH_UP=2)
c      parameter(PATH_DOWN=3)

C     input device class enumerated types
c      integer*4 ALL, LOCATOR, CHOICE
c      parameter(ALL=0)
c      parameter(LOCATOR=1)
c      parameter(CHOICE=4)

C     event queue states
c      integer*4 EMPTY_NO_OVERFLOW, EMPTY_OVERFLOW
c      integer*4 NOT_EMPTY_NO_OVERFLOW, NOT_EMPTY_OVERFLOW
c      parameter(EMPTY_NO_OVERFLOW=0)
c      parameter(EMPTY_OVERFLOW=1)
c      parameter(NOT_EMPTY_NO_OVERFLOW=2)
c      parameter(NOT_EMPTY_OVERFLOW=3)

C     event message link enumerated types
c      integer*4 SIMULTANEOUS_EVENT_FOLLOWS, SINGLE_EVENT
c      parameter(SIMULTANEOUS_EVENT_FOLLOWS=0)
c      parameter(SINGLE_EVENT=1)

C     gerr printing flags
c      integer*4 NO_ERROR_PRINTING, PRINT_ERRORS, PRINT_WARNINGS
      integer*4 NO_ERROR_PRINTING
      parameter(NO_ERROR_PRINTING=0)
c      parameter(PRINT_ERRORS=1)
c      parameter(PRINT_WARNINGS=2)

C     arc close_type
c      integer*4 NO_CHORD, PIE, CHORD
c      parameter(NO_CHORD=0)
c      parameter(PIE=1)
c      parameter(CHORD=2)

C     spline orders and rationalities
c      integer*4 SPLINE_CACHED,LINEAR, QUADRATIC, CUBIC, QUARTIC, QUINTIC
c      integer*4 RATIONAL, NONRATIONAL 
c      integer*4 DC_VALUES,VDC_VALUES,STEP_SIZE,STEP_SIZE_CACHED
c      parameter(SPLINE_CACHED=-2147483648)
c      parameter(LINEAR=2)
c      parameter(QUADRATIC=3) 
c      parameter(CUBIC=4)
c      parameter(QUARTIC=5)
c      parameter(QUINTIC=6) 
c      parameter(RATIONAL=1) 
c      parameter(NONRATIONAL=0) 
c      parameter(DC_VALUES=0)
c      parameter(VDC_VALUES=2)
c      parameter(STEP_SIZE=3)
c      parameter(STEP_SIZE_CACHED=-2147483645)
c
C      transform_point modes
c      integer*4 MC_TO_WC,MC_TO_WORLD,MC_TO_VDC,WORLD_TO_VDC
c      integer*4 WC_TO_MC,WORLD_TO_MC,VDC_TO_MC,VDC_TO_WORLD
c      integer*4 INTVDC_TO_DC,DC_TO_INTVDC
c      parameter(MC_TO_WC=0)
c      parameter(MC_TO_WORLD=0)
c      parameter(MC_TO_VDC=1)
c      parameter(WORLD_TO_VDC=2)
c      parameter(WC_TO_MC=3)
c      parameter(WORLD_TO_MC=3)
c      parameter(VDC_TO_MC=4)
c      parameter(VDC_TO_WORLD=5)
c      parameter(INTVDC_TO_DC=6)
c      parameter(DC_TO_INTVDC=7)
c
C      modes for sectioning (Model Clipping) function
c      integer*4 REPLACE_MCV, INVERT_MCV, AND_WITH_MCV, OR_WITH_MCV
c      integer*4 MODEL_CLIP_OFF, MODEL_CLIP_ON
c      integer*4 PLANE1, PLANE2, PLANE3, PLANE4, PLANE5, PLANE6
c      parameter(REPLACE_MCV=0)
c      parameter(INVERT_MCV=1)
c      parameter(AND_WITH_MCV=2)
c      parameter(OR_WITH_MCV=3)
c      parameter(MODEL_CLIP_OFF=0)
c      parameter(MODEL_CLIP_ON=1)
c      parameter(PLANE1=1)
c      parameter(PLANE2=2)
c      parameter(PLANE3=4)
c      parameter(PLANE4=8)
c      parameter(PLANE5=16)
c      parameter(PLANE6=32)
c
C      indices into view_camera cam array
c      integer*4 CAM_REFX,CAM_REFY,CAM_REFZ
c      integer*4 CAM_CAMX,CAM_CAMY,CAM_CAMZ
c      integer*4 CAM_UPX,CAM_UPY,CAM_UPZ,CAM_FIELD_OV
c      integer*4 CAM_FRONT,CAM_BACK,CAM_PROJECTION
c      parameter(CAM_REFX=1)
c      parameter(CAM_REFY=2)
c      parameter(CAM_REFZ=3)
c      parameter(CAM_CAMX=4)
c      parameter(CAM_CAMY=5)
c      parameter(CAM_CAMZ=6)
c      parameter(CAM_UPX=7)
c      parameter(CAM_UPY=8)
c      parameter(CAM_UPZ=9)
c      parameter(CAM_FIELD_OV=10)
c      parameter(CAM_FRONT=11)
c      parameter(CAM_BACK=12)
c      parameter(CAM_PROJECTION=13)
c
cC      view_camera projection types
c      real CAM_PERSPECTIVE,CAM_PARALLEL
c      parameter(CAM_PERSPECTIVE=0.0)
c      parameter(CAM_PARALLEL=1.0)
c
cC    file printing modes
c      integer*4 ALL_PLANES,PIXEL_MAJOR,PLANE_MAJOR
c      parameter(ALL_PLANES=-1)
c      parameter(PIXEL_MAJOR=-1)
c      parameter(PLANE_MAJOR=-2)
c
cC     highlight attributes
c      integer*4 HL_COLOR,HL_STYLE
c      parameter(HL_COLOR=1)
c      parameter(HL_STYLE=2)
c
cC      hatch types
c      integer*4 PARALLEL_HATCH,CROSSHATCH
c      parameter(PARALLEL_HATCH=0)
c      parameter(CROSSHATCH=1)
c
C     Hardware cursor control types 
c      integer *4 REQUEST_HW_CURSOR,REQUEST_SW_CURSOR,FORCE_HW_CURSOR
c      parameter(REQUEST_HW_CURSOR=1)
c      parameter(REQUEST_SW_CURSOR=2)
c      parameter(FORCE_HW_CURSOR=3)
c      integer *4 REQUEST_HW_ECHO,REQUEST_SW_ECHO,FORCE_HW_ECHO
c      parameter(REQUEST_HW_ECHO=1)
c      parameter(REQUEST_SW_ECHO=2)
c      parameter(FORCE_HW_ECHO=3)
c
C     error types
c      integer*4 SB_ERROR,SB_WARNING,SYS_ERROR
c      parameter(SB_ERROR=0)
c      parameter(SB_WARNING=1)
c      parameter(SYS_ERROR=2)
c
cC      cgm encoding types
c      integer*4 CGM_BINARY,CGM_CHARACTER,CGM_CLEAR_TEXT
c      parameter(CGM_BINARY=1)
c      parameter(CGM_CHARACTER=2)
c      parameter(CGM_CLEAR_TEXT=3)
c
cC     contouring types and table types
c      integer*4 CONTOUR_OFF,CONTOUR_LINE,CONTOUR_SOLID
c      parameter(CONTOUR_OFF=0)
c      parameter(CONTOUR_LINE=1)
c      parameter(CONTOUR_SOLID=2)
c      integer*4 CONTOUR_SHADED
c      parameter(CONTOUR_SHADED=4)
c      integer*4 CONTOUR_BACKFACE
c      parameter(CONTOUR_BACKFACE=8)
c      integer*4 INTERPOLATED,DEFINED
c      parameter(INTERPOLATED=0)
c      parameter(DEFINED=1)
c      integer*4 SCALAR_FRONT_BACK,SCALAR_REAL,SCALAR_IMAG
c      parameter(SCALAR_FRONT_BACK=768)
c      parameter(SCALAR_REAL=256)
c      parameter(SCALAR_IMAG=512)
c
cC     With data primitive vertex flag bits
c      integer*4 VERTEX_INTENSITY,VERTEX_COLOR,VERTEX_NORMAL,TEXTURE_MAP
c      parameter(VERTEX_INTENSITY=1)
c      parameter(VERTEX_COLOR=2)
c      parameter(VERTEX_NORMAL=4)
c      parameter(TEXTURE_MAP=8)
c      integer*4 VERTEX_BLEND,ILLUMINATION,DEFORMATION,CONTOURING
c      integer*4 MD_FLAGS,FLOAT_LIST,VERTEX_OFFSETS
c      parameter(VERTEX_BLEND=16)
c      parameter(ILLUMINATION=32)
c      parameter(DEFORMATION=64)
c      parameter(CONTOURING=128)
c      parameter(MD_FLAGS=256)
c      parameter(FLOAT_LIST=512)
c      parameter(VERTEX_OFFSETS=1024)
c
C     With data primitive facet flag bits
C     CLOCKWISE, COUNTER_CLOCKWISE and UNIT_NORMALS defined above
c      integer*4 FACET_COLOR,FACET_NORMAL,EDGE_FLAG
c      parameter(FACET_COLOR=2)
c      parameter(FACET_NORMAL=4)
c      parameter(EDGE_FLAG=8)
c
cC     Deformation modes
c      integer*4 DEFORMATION_OFF,DEFORMATION_REAL_VALUE
c      integer*4 DEFORMATION_IMAGINARY_VALUE,DEFORMATION_MAGNITUDE
c      parameter(DEFORMATION_OFF=0)
c      parameter(DEFORMATION_REAL_VALUE=1)
c      parameter(DEFORMATION_IMAGINARY_VALUE=2)
c      parameter(DEFORMATION_MAGNITUDE=256)
c
cC     Rendering hints
c      integer*4 POLYGON_SHAPE_HINT
c      parameter(POLYGON_SHAPE_HINT=0)
c
cC     Data values for POLYGON_SHAPE_HINT
c      integer*4 PG_SHAPE_COMPLEX,PG_SHAPE_CONVEX
c      parameter(PG_SHAPE_COMPLEX=0)
c      parameter(PG_SHAPE_CONVEX=1)
c
cC      Inquire Capabilities
c      integer*4 HLHSR_CAPABILITIES,FACING_CAPABILITIES
c      integer*4 COLOR_1_CAPABILITIES,COLOR_2_CAPABILITIES
c      integer*4 LIGHTING_CAPABILITIES,SHADING_CAPABILITIES
c      integer*4 TRANSPARENCY_CAPABILITIES
c      integer*4 MODEL_CLIP_CAPABILITIES,WITH_DATA_CAPABILITIES
c      integer*4 PRIMITIVES_1_CAPABILITIES,PRIMITIVES_2_CAPABILITIES
c      integer*4 CONTROL_CAPABILITIES
c      integer*4 PERF_HINTS_1_CAPABILITIES,PERF_HINTS_2_CAPABILITIES
c      integer*4 SIZE_OF_CAPABILITIES
c      parameter(HLHSR_CAPABILITIES=1)
c      parameter(FACING_CAPABILITIES=2)
c      parameter(COLOR_1_CAPABILITIES=3)
c      parameter(COLOR_2_CAPABILITIES=4)
c      parameter(LIGHTING_CAPABILITIES=5)
c      parameter(SHADING_CAPABILITIES=6)
c      parameter(TRANSPARENCY_CAPABILITIES=7)
c      parameter(MODEL_CLIP_CAPABILITIES=8)
c      parameter(WITH_DATA_CAPABILITIES=9)
c      parameter(PRIMITIVES_1_CAPABILITIES=10)
c      parameter(PRIMITIVES_2_CAPABILITIES=11)
c      parameter(CONTROL_CAPABILITIES=12)
c      parameter(PERF_HINTS_1_CAPABILITIES=13)
c      parameter(PERF_HINTS_2_CAPABILITIES=14)
c      parameter(SIZE_OF_CAPABILITIES=14)
c
cC        HLHSR_CAPABILITIES
c      byte IC_ZBUFFER_16,IC_ZBUFFER_24
c      parameter(IC_ZBUFFER_16=0)
c      parameter(IC_ZBUFFER_24=1)
c
cC        FACING_CAPABILITIES
c      byte IC_FACE_CULLING,IC_BACKFACE_ATTRS
c      parameter(IC_FACE_CULLING=0)
c      parameter(IC_BACKFACE_ATTRS=1)
c
cC        COLOR_1_CAPABILITIES
c      byte IC_GRAY_SCALE,IC_GREY_SCALE,IC_CMAP_NORMAL
c      byte IC_CMAP_MONOTONIC,IC_CMAP_FULL,IC_DITHERING
c      byte IC_GAMMA_RENDERING,IC_GAMMA_CMAP,IC_OVERLAY_TRANSPARENT
c      parameter(IC_GRAY_SCALE=0)
c      parameter(IC_GREY_SCALE=0)
c      parameter(IC_CMAP_NORMAL=1)
c      parameter(IC_CMAP_MONOTONIC=2)
c      parameter(IC_CMAP_FULL=3)
c      parameter(IC_DITHERING=4)
c      parameter(IC_GAMMA_RENDERING=5)
c      parameter(IC_GAMMA_CMAP=6)
c      parameter(IC_OVERLAY_TRANSPARENT=7)
c
cC        COLOR_2_CAPABILITIES
c      byte IC_MULTIPLE_CMAPS, IC_SHARED_CMAP, IC_RGB_IO
c      parameter(IC_MULTIPLE_CMAPS=0)
c      parameter(IC_SHARED_CMAP=1)
c      parameter(IC_RGB_IO=2)
c
cC        LIGHTING_CAPABILITIES
c      byte IC_LIGHTING,IC_LIGHTS_16,IC_LIGHTS_8
c      byte IC_REFLECTANCE_NORMAL_TOWARD_VIEWER_LIGHTING
c      parameter(IC_LIGHTING=0)
c      parameter(IC_LIGHTS_8=1)
c      parameter(IC_LIGHTS_16=2)
c      parameter(IC_REFLECTANCE_NORMAL_TOWARD_VIEWER_LIGHTING=3)
c
cC        SHADING_CAPABILITIES
c      byte IC_SHADING,IC_DEPTH_CUEING
c      parameter(IC_SHADING=0)
c      parameter(IC_DEPTH_CUEING=1)
c
cC        TRANSPARENCY_CAPABILITIES
c      byte IC_ALPHA_TRANSPARENCY,IC_SCREEN_DOOR
c      parameter(IC_ALPHA_TRANSPARENCY=0)
c      parameter(IC_SCREEN_DOOR=1)
c
cC        MODEL_CLIP_CAPABILITIES
c      byte IC_MODEL_CLIP,IC_MODEL_CAP,IC_MODEL_INTERFERENCE
c      parameter(IC_MODEL_CLIP=0)
c      parameter(IC_MODEL_CAP=1)
c      parameter(IC_MODEL_INTERFERENCE=2)
c
cC        WITH_DATA_CAPABILITIES
c      byte IC_ILLUM_BITS,IC_ALPHA_BLEND,IC_CONTOURING,IC_DEFORMATION
c      byte IC_TEXTURE_MAP,IC_TEXTURE_MAP_2,IC_HW_TEXTURE
c      parameter(IC_ILLUM_BITS=0)
c      parameter(IC_ALPHA_BLEND=1)
c      parameter(IC_CONTOURING=2)
c      parameter(IC_DEFORMATION=3)
c      parameter(IC_TEXTURE_MAP=4)
c      parameter(IC_TEXTURE_MAP_2=5)
c      parameter(IC_HW_TEXTURE=6)
c
cC        PRIMITIVES_1_CAPABILITIES
c      byte IC_AA_VECTORS,IC_AA_POLYGONS,IC_NURBS_4,IC_NURBS_6
c      byte IC_NURBS_TRIM,IC_FA_FM,IC_NEGATIVE_LINETYPES
c      byte IC_TM_POLYGONS
c      parameter(IC_AA_VECTORS=0)
c      parameter(IC_AA_POLYGONS=1)
c      parameter(IC_NURBS_4=2)
c      parameter(IC_NURBS_6=3)
c      parameter(IC_NURBS_TRIM=4)
c      parameter(IC_FA_FM=5)
c      parameter(IC_NEGATIVE_LINETYPES=6)
c      parameter(IC_TM_POLYGONS=7)
c
cC        PRIMITIVES_2_CAPABILITIES
c      byte IC_POLYGON_OFFSET
c      byte IC_WIDELINE_CONTROL
c      byte IC_PERIMETER_LINETYPE
c      parameter(IC_POLYGON_OFFSET=0)
c      parameter(IC_WIDELINE_CONTROL=1)
c      parameter(IC_PERIMETER_LINETYPE=2)
c
cC        CONTROL_CAPABILITIES
c      byte IC_BACKING_STORE,IC_PER_WINDOW_DBUFFER
c      byte IC_TRANS_WIN_IMAGE_CURSOR
c      parameter(IC_BACKING_STORE=0)
c      parameter(IC_PER_WINDOW_DBUFFER=1)
c      parameter(IC_TRANS_WIN_IMAGE_CURSOR=2)
c
cC        PERF_HINTS_1_CAPABILITIES
c      byte IC_HW_ZBUFFER,IC_CONVEXITY,IC_HW_POLYGON_OFFSET
c        byte IC_HW_WIDELINE,IC_HW_FB_DISTINGUISH, IC_HW_OCCLUSION_CULL
c      parameter(IC_HW_ZBUFFER=0)
c      parameter(IC_CONVEXITY=1)
c      parameter(IC_HW_POLYGON_OFFSET=2)
c      parameter(IC_HW_WIDELINE=3)
c      parameter(IC_HW_FB_DISTINGUISH=4)
c      parameter(IC_HW_OCCLUSION_CULL=5)
c
cC        PERF_HINTS_2_CAPABILITIES
c
cC        Volumetric Rendering gescape macros
c      integer*4 PRE_SCALED_ALPHA,INDIRECT_DATA,INDIRECT_DATA16
c      integer*4 AUTO_FILL_VOXEL,Z_CLIP_VOXEL
c      parameter(PRE_SCALED_ALPHA=8)
c      parameter(INDIRECT_DATA=16)
c      parameter(INDIRECT_DATA16=32)
c      parameter(AUTO_FILL_VOXEL=64)
c      parameter(Z_CLIP_VOXEL=128)
c      
c
cC      GLOBAL gescapes
c      integer*4 SWITCH_SEMAPHORE,READ_COLOR_MAP
c      integer*4 BLINK_PLANES,BLINK_INDEX
c      parameter(SWITCH_SEMAPHORE=0)
c      parameter(READ_COLOR_MAP=1)
c      parameter(BLINK_PLANES=2)
c      parameter(BLINK_INDEX=3)
c
cC      GLOBAL raster gescapes
c      integer*4  R_GET_FRAME_BUFFER
c      parameter(R_GET_FRAME_BUFFER=20)
c      integer*4  R_LOCK_DEVICE
c      parameter(R_LOCK_DEVICE=21)
c      integer*4  R_UNLOCK_DEVICE
c      parameter(R_UNLOCK_DEVICE=22)
c      integer*4  R_GET_WINDOW_INFO
c      parameter(R_GET_WINDOW_INFO=23)
c      integer*4  R_FULL_FRAME_BUFFER
c      parameter(R_FULL_FRAME_BUFFER=24)
c      integer*4  R_ALLOC_OFFSCREEN
c      parameter(R_ALLOC_OFFSCREEN=25)
c      integer*4  R_FREE_OFFSCREEN
c      parameter(R_FREE_OFFSCREEN=26)
c      integer*4  R_BIT_MODE
c      parameter(R_BIT_MODE=27)
c      integer*4  R_BIT_MASK
c      parameter(R_BIT_MASK=28)
c      integer*4  R_DEF_FILL_PAT
c      parameter(R_DEF_FILL_PAT=29)
c      integer*4  R_OVERLAY_ECHO
c      parameter(R_OVERLAY_ECHO=30)
c      integer*4  R_OV_ECHO_COLORS
c      parameter(R_OV_ECHO_COLORS=31)
c      integer*4  R_DEF_ECHO_TRANS
c      parameter(R_DEF_ECHO_TRANS=32)
c      integer*4  R_TRANSPARENCY_INDEX
c      parameter(R_TRANSPARENCY_INDEX=33)
c      integer*4  R_LINE_TYPE
c      parameter(R_LINE_TYPE=34)
c      integer*4  R_ECHO_FG_BG_COLORS
c      parameter(R_ECHO_FG_BG_COLORS=35)
c      integer*4  R_DMA_MODE
c      parameter(R_DMA_MODE=36)
c      integer*4  R_ECHO_MASK
c      parameter(R_ECHO_MASK=37)
c      integer*4  R_ECHO_CONTROL
c      parameter(R_ECHO_CONTROL=38)
c      integer*4  R_READ_FB
c      parameter(R_READ_FB=41)
c      integer*4  R_WRITE_FB
c      parameter(R_WRITE_FB=42)
c      integer*4  R_PERIMETER_TYPE
c      parameter(R_PERIMETER_TYPE=43)
c      integer*4  R_OFFSCREEN_ALLOC
c      parameter(R_OFFSCREEN_ALLOC=1106)
c      integer*4  R_OFFSCREEN_FREE
c      parameter(R_OFFSCREEN_FREE=1107)
c
cC      HPGL gescapes
c      integer*4 HPGL_WRITE_BUFFER,HPGL_SET_PEN_NUM
c      integer*4 HPGL_SET_PEN_SPEED,HPGL_SET_PEN_WIDTH
c      integer*4 HPGL_READ_BUFFER
c      parameter(HPGL_WRITE_BUFFER=100)
c      parameter(HPGL_SET_PEN_NUM=101)
c      parameter(HPGL_SET_PEN_SPEED=102)
c      parameter(HPGL_SET_PEN_WIDTH=103)
c      parameter(HPGL_READ_BUFFER=104)
c
cC     HPGL2 gescapes
c      integer*4 HPGL2_SET_MEDIA_TYPE,HPGL2_LOGICAL_PEN_WIDTH
c      integer*4 HPGL2_CUTTER_CONTROL,HPGL2_REPLOT,HPGL2_FONT_TYPEFACE
c      integer*4 HPGL2_ADAPTIVE_LINES,HPGL2_SET_QUALITY
c      integer*4 HPGL2_SET_CMAP_SIZE,HPGL2_FONT_WEIGHT,HPGL2_FONT_POSTURE
c      parameter(HPGL2_SET_MEDIA_TYPE=105)
c      parameter(HPGL2_LOGICAL_PEN_WIDTH=106)
c      parameter(HPGL2_CUTTER_CONTROL=107)
c      parameter(HPGL2_REPLOT=108)
c      parameter(HPGL2_FONT_TYPEFACE=109)
c      parameter(HPGL2_ADAPTIVE_LINES=110)
c      parameter(HPGL2_SET_QUALITY=111)
c      parameter(HPGL2_SET_CMAP_SIZE=112)
c      parameter(HPGL2_FONT_WEIGHT=113)
c      parameter(HPGL2_FONT_POSTURE=114)
c
cC      HP26XX/HPTERM gescapes
c      integer*4 HP26_PRINT_ESC
c      parameter(HP26_PRINT_ESC=200)
c      integer*4 HPTERM_PRINT_ESC
c      parameter(HPTERM_PRINT_ESC=200)
c      integer*4 HPTERM_640x400
c      parameter(HPTERM_640x400=201)
c
cC      98700 gescapes
c      integer*4 GB_NONE
c      parameter(GB_NONE=300)
c
cC      98710 gescapes
c      integer*4 GA_NONE
c      parameter(GA_NONE=400)
c
cC      300l gescapes
c      integer*4 TC_HALF_PIXEL
c      parameter(TC_HALF_PIXEL=500)

cC      HIL & Keyboard gescapes
c      integer*4 ENABLE_AUTO_PROMPT,DISABLE_AUTO_PROMPT
c      integer*4 PROMPT_ON,PROMPT_OFF
c      integer*4 TRIGGER_ON_RELEASE,IGNORE_RELEASE
c      integer*4 REPORT_PROXIMITY,IGNORE_PROXIMITY
c      integer*4 ENABLE_ACKNOWLEDGE,DISABLE_ACKNOWLEDGE
c      integer*4 SET_ACCELERATION
c      parameter(ENABLE_AUTO_PROMPT=600)
c      parameter(DISABLE_AUTO_PROMPT=601)
c      parameter(PROMPT_ON=602)
c      parameter(PROMPT_OFF=603)
c      parameter(TRIGGER_ON_RELEASE=604)
c      parameter(IGNORE_RELEASE=605)
c      parameter(REPORT_PROXIMITY=606)
c      parameter(IGNORE_PROXIMITY=607)
c      parameter(ENABLE_ACKNOWLEDGE=608)
c      parameter(DISABLE_ACKNOWLEDGE=609)
c      parameter(SET_ACCELERATION=610)
c
cC      GKSM gescapes
c      integer*4 GKSM_WRITE_ITEM,GKSM_GET_ITEM_TYPE
c      integer*4 GKSM_READ_ITEM,GKSM_SKIP_ITEM
c      integer*4 GKSM_INQ_COLOR_NDCES,GKSM_INQ_PAT_REP
c      parameter(GKSM_WRITE_ITEM=700)
c      parameter(GKSM_GET_ITEM_TYPE=701)
c      parameter(GKSM_READ_ITEM=702)
c      parameter(GKSM_SKIP_ITEM=703)
c      parameter(GKSM_INQ_COLOR_NDCES=704)
c      parameter(GKSM_INQ_PAT_REP=705)
c
cC      98721 gescapes
c      integer*4 TRANSPARENCY
c      integer*4 ZBUFFER_ALLOC
c      integer*4 LS_OVERFLOW_CONTROL
c      integer*4 PATTERN_FILL
c      integer*4 ZWRITE_ENABLE
c      integer*4 ZSTATE_SAVE
c      integer*4 ZSTATE_RESTORE
c      integer*4 ZBANK_ACCESS
c      parameter(TRANSPARENCY=800)
c      parameter(ZBUFFER_ALLOC=801)
c      parameter(LS_OVERFLOW_CONTROL=802)
c      parameter(PATTERN_FILL=803)
c      parameter(ZWRITE_ENABLE=804)
c      parameter(ZSTATE_SAVE=805)
c      parameter(ZSTATE_RESTORE=806)
c      parameter(ZBANK_ACCESS=807)
c
cC     SMDpixel and SMDpixel3 gescapes */
c      integer*4 SMD_SUPPLY_MEM_BUFF
c      integer*4 SMD_GET_MEM_REQUIRED
c      integer*4 SMD_DEFINE_XY
c      integer*4 SMD_DEFINE_DEPTH
c      integer*4 SMD_ALLOCATE_MEMORY
c      parameter(SMD_SUPPLY_MEM_BUFF=900)
c      parameter(SMD_GET_MEM_REQUIRED=901)
c      parameter(SMD_DEFINE_XY=902)
c      parameter(SMD_DEFINE_DEPTH=903)
c      parameter(SMD_ALLOCATE_MEMORY=904)
c
cC   Xn gescape opcodes
c      integer*4 XN_INPUT_RAW
c      integer*4 XN_KEY_RELEASE
c      integer*4 XN_BUTTON_RELEASE
c      parameter(XN_INPUT_RAW=1000)
c      parameter(XN_KEY_RELEASE=1001)
c      parameter(XN_BUTTON_RELEASE=1002)
c
cC     98548/49/50/56 driver gescapes
c      integer*4 GR2D_MASK_ENABLE
c      parameter(GR2D_MASK_ENABLE=1100)
c      integer*4 GR2D_MASK_RULE
c      parameter(GR2D_MASK_RULE=1101)
c      integer*4 GR2D_DEF_MASK
c      parameter(GR2D_DEF_MASK=1102)
c      integer*4 GR2D_FILL_PATTERN
c      parameter(GR2D_FILL_PATTERN=1103)
c      integer*4 GR2D_OVERLAY_TRANSPARENT
c      parameter(GR2D_OVERLAY_TRANSPARENT=1104)
c      integer*4 GR2D_REPLICATE
c      parameter(GR2D_REPLICATE=1105)
c      integer*4 GR2D_ALLOC_OFFSCREEN
c      parameter(GR2D_ALLOC_OFFSCREEN=1106)
c      integer*4 GR2D_FREE_OFFSCREEN
c      parameter(GR2D_FREE_OFFSCREEN=1107)
c      integer*4 GR2D_PLANE_MASK
c      parameter(GR2D_PLANE_MASK=1108)
c      integer*4 GR2D_INQ_CLIST_ADDR
c      parameter(GR2D_INQ_CLIST_ADDR=1109)
c      integer*4 GR2D_LOAD_CLIST
c      parameter(GR2D_LOAD_CLIST=1110)
c      integer*4 GR2D_CONVEX_POLYGONS
c      parameter(GR2D_CONVEX_POLYGONS=1112)
c      integer*4 GR2D_PLANE_MOVE
c      parameter(GR2D_PLANE_MOVE=1153)
c
cC   hp98730/31 driver gescapes
c      integer*4 PAN_AND_ZOOM
c      parameter(PAN_AND_ZOOM=1200)
c      integer*4 OVERLAY_BLEND
c      parameter(OVERLAY_BLEND=1201)
c      integer*4 IMAGE_BLEND
c      parameter(IMAGE_BLEND=1202)
c      integer*4 SET_BANK_CMAP
c      parameter(SET_BANK_CMAP=1203)
c      integer*4 GAMMA_CORRECTION
c      parameter(GAMMA_CORRECTION=1204)
c      integer*4 INQ_GAMMA_CORRECTION
c      parameter(INQ_GAMMA_CORRECTION=1205)
c      integer*4 FULL_COLOR_INDEX
c      parameter(FULL_COLOR_INDEX=1206)
c      integer*4 POLYGON_TRANSPARENCY
c      parameter(POLYGON_TRANSPARENCY=1207)
c      integer*4 CLIP_OVERFLOW
c      parameter(CLIP_OVERFLOW=1208)
c
cC   hp98730/31 driver gescapes
c      integer*4 CGMESC_ENCODING
c      parameter(CGMESC_ENCODING=1300)
c      integer*4 CGMESC_ESCAPE_ELT 
c      parameter(CGMESC_ESCAPE_ELT=1301)
c      integer*4 CGMESC_MET_NAME
c      parameter(CGMESC_MET_NAME=1302)
c      integer*4 CGMESC_PIC_NAME
c      parameter(CGMESC_PIC_NAME=1303)
c      integer*4 CGMESC_FONT_IX
c      parameter(CGMESC_FONT_IX=1304)
c      integer*4 CGMESC_MESSAGE
c      parameter(CGMESC_MESSAGE=1305)
c      integer*4 CGMESC_APPL_DATA
c      parameter(CGMESC_APPL_DATA=1306)
c      integer*4 CGMESC_VDC_PREC
c      parameter(CGMESC_VDC_PREC=1307)
c      integer*4 CGMESC_TOP_MODE
c      parameter(CGMESC_TOP_MODE=1308)
c
cC   hp98704/05  driver gescape
c      integer*4 SET_REPLACEMENT_RULE
c      parameter (SET_REPLACEMENT_RULE=1250)
c
cC   hp98735/36 driver gescapes
c      integer*4 VDMA_CONTROL
c      parameter(VDMA_CONTROL=1500)
c      integer*4 GR2D_PLANE_RULE
c      parameter(GR2D_PLANE_RULE=1501)
c      integer*4 INQ_12_BIT_INDEXING, INQ_12BIT_INDEXING
c      parameter(INQ_12_BIT_INDEXING=1502)
c      parameter(INQ_12BIT_INDEXING=1502)
c      integer*4 TOGGLE_2D_COLORMAP
c      parameter(TOGGLE_2D_COLORMAP=1503)
c        integer*4 TEXTURE_CONTROL
c        parameter(TEXTURE_CONTROL=1508)
c        integer*4 CONTOUR_CONTROL
c        parameter(CONTOUR_CONTROL=1509)
c        integer*4 BLOCK_WRITE_SKIPCOUNT
c        parameter(BLOCK_WRITE_SKIPCOUNT=1510)
c        integer*4 AROP_BLEND
c        parameter(AROP_BLEND=1511)
c        integer*4 PLUG_ACCELERATED_PIPELINE
c        parameter(PLUG_ACCELERATED_PIPELINE=1512)
c        integer*4 DC_COMPATIBILITY_MODE
c        parameter(DC_COMPATIBILITY_MODE=1513)
c        integer*4 PAN
c        parameter(PAN=1514)
c        integer*4 DRAW_POINTS
c        parameter(DRAW_POINTS=1516)
c        integer*4 ILLUMINATION_ENABLE
c        parameter(ILLUMINATION_ENABLE=1517)
c        integer*4 TEXTURE_DOWNSAMPLE
c        parameter(TEXTURE_DOWNSAMPLE=1518)
c      integer*4 TEXTURE_RETRIEVE
c      parameter(TEXTURE_RETRIEVE=1519)
c        integer*4 STEREO
c        parameter(STEREO=1520)
c        integer*4 AUTO_RESIZE_DEVICE
c        parameter(AUTO_RESIZE_DEVICE=1522)
c        integer*4 RESIZE_DEVICE
c        parameter(RESIZE_DEVICE=1523)
c        integer*4 MULTIPASS_EDGES
c        parameter(MULTIPASS_EDGES=1524)
c        integer*4 LINEAR_POLYPOINT
c        parameter(LINEAR_POLYPOINT=1525)
c        integer*4 DC_PIXEL_WRITE
c        parameter(DC_PIXEL_WRITE=1526)
c        integer*4 POLYLINE_OVERLAY
c        parameter(POLYLINE_OVERLAY=1527)
c
cC       sbv driver gescape
c      integer*4 SBVESC_OBJ_NAME
c      parameter(SBVESC_OBJ_NAME=1601)
c      integer*4 SBVESC_BEGIN_ARC
c      parameter(SBVESC_BEGIN_ARC=1602)
c      integer*4 SBVESC_END_ARC
c      parameter(SBVESC_END_ARC=1603)
c      integer*4 SBVESC_COMMENT
c      parameter(SBVESC_COMMENT=1604)
c      integer*4 SBVESC_LF_COORD
c      parameter(SBVESC_LF_COORD=1605)
c      integer*4 SBVESC_RT_COORD
c      parameter(SBVESC_RT_COORD=1606)
c
cC       hpevrx driver gescapes
c      integer*4 SET_BUFFER_SIZE
c      parameter(SET_BUFFER_SIZE=1700)
c
cC       hpgcrx driver gescapes
c      integer *4 GCRX_PIXEL_REPLICATE, GCRX_SW_CMAP_FULL
c      parameter(GCRX_PIXEL_REPLICATE=1800)
c      parameter(GCRX_SW_CMAP_FULL=1801)
c        integer*4 CUBIC_POLYPOINT
c        parameter(CUBIC_POLYPOINT=1802)
c        integer*4 GCRX_AWIPS_MODE, GCRX_AWIPS_ACCESS
c        parameter(GCRX_AWIPS_MODE=1804)
c        parameter(GCRX_AWIPS_ACCESS=1805)
c        integer*4 COLOR_RECOVERY_CONTROL
c        parameter(COLOR_RECOVERY_CONTROL=1806)
c
cC       hphcrx and future driver gescapes
c        integer*4 MIDDLELAY_MODE, MIDDLELAY_ACCESS
c        parameter(MIDDLELAY_MODE=1804)
c        parameter(MIDDLELAY_ACCESS=1805)
c        integer*4 SET_POLYGON_OFFSET
c        parameter(SET_POLYGON_OFFSET=1900)
c        integer*4 WIDELINE_CONTROL
c        parameter(WIDELINE_CONTROL=1901)
c        integer*4 R_LITE_DBUFFER_MODE
c        parameter(R_LITE_DBUFFER_MODE=1902)
c        integer*4 R_LITE_DBUFFER_SWAP
c        parameter(R_LITE_DBUFFER_SWAP=1903)
c      integer*4 REFLECTANCE_NORMAL_TOWARD_VIEWER_LIGHTING
c      parameter(REFLECTANCE_NORMAL_TOWARD_VIEWER_LIGHTING=1904)
c      integer*4 ZBUFFER_COMPARE_RULE
c      parameter(ZBUFFER_COMPARE_RULE=1905)
c      integer*4 PHIGS_MULTIPASS_TRANSPARENCY_MODE
c      parameter(PHIGS_MULTIPASS_TRANSPARENCY_MODE=1906)
c      integer*4 STENCIL_BASED_CAPPING_MODE
c      parameter(STENCIL_BASED_CAPPING_MODE=1907)
c      integer*4 HW_FB_DISTINGUISH
c      parameter(HW_FB_DISTINGUISH=1908)
c      integer*4 OCCLUSION_CULL_CONTROL
c      parameter(OCCLUSION_CULL_CONTROL=2010)
c      integer*4 OCCLUSION_CULL_CHECK
c      parameter(OCCLUSION_CULL_CHECK=2011)
c
cC      Bus type definitions  (added for concurrent DIOII/SGC support)
c      integer*4 DIOI, DIOII, MIDBUS, SGC
c      parameter(DIOI=0)
c      parameter(DIOII=1)
c      parameter(MIDBUS=2)
c      parameter(SGC=3)
c
cC   Device-independent texture mapping data structure types
c
c      structure /texel_format/
c        integer*4 tm_type
c        integer*4 texel_type
c        integer*4 domain_type
c        integer*4 mip_num_levels
c      end structure
c
c      structure /texel_float_rgb/
c        real r,g,b
c      end structure
c 
c      structure /texel_float_rgba/
c        real r,g,b,a
c      end structure
c 
c      structure /texel_float_argb/
c        real a,r,g,b
c      end structure
c
c      structure /texel_byte_rgb/
c        byte r,g,b
c      end structure
c
c      structure /texel_byte_rgba/
c        byte r,g,b,a
c      end structure
c 
c      structure /texel_byte_argb/
c        byte a,r,g,b
c      end structure
c
c      structure /rgbrec/
c        real red,green,blue
c      end structure
c
c      structure /texture_map/
c        integer*4 attr_flags
c        integer*4 texel_desc
c        real depth_bias_factor
c        integer*4 min_filter
c        integer*4 mag_filter
c        integer*4 boundary_condition_t0
c        integer*4 boundary_condition_t1
c        integer*4 reserved
c        integer*4 boundary_color
c        record /rgbrec/ boundary_clamp_color
c        integer*4 composition_method
c        integer*4 render_method
c        integer*4 param_method
c        real orientation(4,4)
c        integer*4 texture_index
c        real p0(4)
c        real p1(4)
c        real reflection(4,4)
c      end structure
c
c      structure /tm_coord_data/
c        integer*4 projection
c        real matrix(4,4)
c        real p0(4)
c        real p1(4)
c        integer*4 coord_source
c        integer*4 texture_index
c        real mc_transform(4,4)
c      end structure
c
C     Starbase functions that return values
      external gclose
c      external read_choice_event, read_locator_event, disable_events
c      external intread_locator_event2d
c      external double_buffer, hidden_surface, inquire_cgm_names
c      external rgb_to_index, texture_index, bf_texture_index
c      external tm_activate_texture, tm_activate_bf_texture
      integer*4 gclose
c      integer*4 read_choice_event, read_locator_event, disable_events
c      integer*4 intread_locator_event2d
c      integer*4 double_buffer, hidden_surface, inquire_cgm_names
c      integer*4 rgb_to_index, texture_index, bf_texture_index
c      integer*4 tm_activate_texture, tm_activate_bf_texture
C     /**/

      COMMON global_mode,qdt_file_version
     +     ,global_compare_and_convert_flag
      character*2 global_mode
      character*1 global_compare_and_convert_flag
      character*2 qdt_file_version
      
